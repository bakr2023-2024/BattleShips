package BattleShips;

import java.util.ArrayList;
import java.util.HashMap;

import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.*;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.io.InputStream;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.BufferedInputStream;
import java.awt.event.ActionEvent;
import java.awt.Dimension;
import java.awt.GridLayout;

public class Game extends javax.swing.JFrame {

	private static final long serialVersionUID = 1L;
	/**
	 * Creates new form Game
	 */
	BattleShips game;
	int N = 10;
	Controller controller = null;
	Clip clip = null;

	public void playSound(String soundFilePath) {
		try {
			InputStream inputStream = new BufferedInputStream(getClass().getResourceAsStream(soundFilePath));
			AudioInputStream audioStream = AudioSystem.getAudioInputStream(inputStream);
			clip = AudioSystem.getClip();
			clip.open(audioStream);
			clip.start();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public Game(BattleShips game) {
		getContentPane().setBackground(new Color(0, 128, 192));
		this.game = game;
		buttons = new JLabel[game.N][game.N];
		initComponents();
		controller = new Controller(this, game);
		this.game.controller = controller;
		this.controller.execute();
	}

	void updateActionLog(String str) {
		textArea_1.append(str + "\n");
		if (str.endsWith("^"))
			playSound("/hit.wav");
		else if (str.endsWith("*"))
			playSound("/miss.wav");
		else if (str.endsWith(">:)"))
			playSound("/kill.wav");
	}

	void displayCurrentLowerGrid() {
		lblNewLabel.setText("Current player: " + controller.model.current.name);
		jPanel2.removeAll();
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < N; j++) {
				JLabel label = new JLabel();
				Image img = new ImageIcon(
						getClass().getResource("/" + controller.model.current.lowerGrid[i][j].toString() + ".png"))
						.getImage();
				label.setIcon(new ImageIcon(img));
				jPanel2.add(label);
			}
		}
		jPanel2.repaint();
		jPanel2.revalidate();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	JLabel[][] buttons;

	public void makeButtons() {
		for (int i = 0; i < game.N; i++) {
			for (int j = 0; j < game.N; j++) {
				buttons[i][j] = new JLabel();
				buttons[i][j].setPreferredSize(new Dimension(51, 51));
				buttons[i][j].setIconTextGap(0);
				jPanel2.add(buttons[i][j]);
				final int r = i, c = j;
				buttons[i][j].addMouseListener(new MouseListener() {

					@Override
					public void mouseClicked(MouseEvent e) {
						playSound("/place.wav");
						if (controller.lowerGridCopy[r][c] != LOWER.EMPTY) {
							lblNewLabel_2.setText("This cell is occupied, please choose a different one");
						} else {
							boolean horizontal = (btnNewButton.getText().equals("Horizontal"));
							LOWER type = LOWER.valueOf(btnNewButton_4.getText());
							if (controller.insertShip(r, c, horizontal, type, controller.ships.get(type), buttons)) {
								ArrayList<String> choices = new ArrayList<String>();
								for (LOWER item : controller.ships.keySet())
									choices.add(item.toString());
								btnNewButton_4.setText(
										choices.get((choices.indexOf(btnNewButton_4.getText()) + 1) % choices.size()));
								controller.ships.remove(type);
							}
							if (controller.ships.isEmpty())
								confirmPlacements();
						}
					}

					@Override
					public void mousePressed(MouseEvent e) {
					}

					@Override
					public void mouseReleased(MouseEvent e) {
					}

					@Override
					public void mouseEntered(MouseEvent e) {
					}

					@Override
					public void mouseExited(MouseEvent e) {
					}

				});
			}
		}
	}

	public void addSettingBoard() {
		controller.ships = new HashMap<LOWER, Integer>(game.ships);
		controller.clearCopyGrid();
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < N; j++) {
				Image img = new ImageIcon(getClass().getResource("/EMPTY.png")).getImage();
				buttons[i][j].setIcon(new ImageIcon(img));
			}
		}
		jPanel2.repaint();
		jPanel2.revalidate();
		lblNewLabel.setText("Current Player: " + controller.model.current.name);
	}

	void confirmPlacements() {
		int result = JOptionPane.showConfirmDialog(null, "Confirm Placements?", "Confirm message",
				JOptionPane.YES_NO_OPTION);
		if (result == JOptionPane.YES_OPTION)
			controller.applyChanges();
		else
			addSettingBoard();
	}

	void doneSetting() {
		controller.doneSetting();
		panel.removeAll();
		panel.setLayout(new BorderLayout());
		jPanel2.removeAll();
		jPanel2.setBackground(Color.blue);
		btnNewButton_1.setEnabled(true);
		btnNewButton_2.setEnabled(true);
		btnNewButton_3.setEnabled(true);
		panel.setBackground(Color.black);
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setViewportBorder(null);
		scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		panel.add(scrollPane, BorderLayout.CENTER);
		textArea_1 = new JTextArea();
		textArea_1.setEditable(false);
		textArea_1.setForeground(new Color(0, 255, 0));
		textArea_1.setBackground(new Color(0, 0, 0));
		scrollPane.setViewportView(textArea_1);
		jLabel2.setText("Attacking Phase");
	}

	void addAttackingBoard() {
		displayCurrentLowerGrid();
		repaint();
		revalidate();
	}

	void endGame() {
		this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		new Victory(this).setVisible(true);
		dispose();
	}

	JLabel lblNewLabel = new JLabel("Current player: ");
	JLabel lblNewLabel_2 = new JLabel("New label");
	JButton btnNewButton = new JButton("Horizontal");
	JPanel panel = new JPanel();
	JLabel lblNewLabel_1 = new JLabel("Placing");

	private void initComponents() {
		btnNewButton.addActionListener(e -> {
			if (btnNewButton.getText().equals("Horizontal"))
				btnNewButton.setText("Vertical");
			else
				btnNewButton.setText("Horizontal");
		});
		jPanel2 = new javax.swing.JPanel();
		jPanel3 = new javax.swing.JPanel();
		jPanel3.setBorder(null);
		jLabel2 = new javax.swing.JLabel();

		jLabel2.setFont(new Font("Tahoma", Font.BOLD, 35));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		jPanel2.setBackground(Color.blue);
		jPanel2.setPreferredSize(new Dimension(700, 700));
		jPanel2.setLayout(new java.awt.GridLayout(game.N, game.N));
		jPanel3.setBackground(new Color(0, 128, 192));

		jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel2.setText("Setting Phase");

		lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 18));
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel3Layout.createSequentialGroup().addContainerGap()
						.addComponent(lblNewLabel, GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE).addContainerGap())
				.addGroup(Alignment.TRAILING, jPanel3Layout.createSequentialGroup().addGap(73)
						.addComponent(jLabel2, GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE).addGap(69)));
		jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(Alignment.TRAILING).addGroup(Alignment.LEADING,
				jPanel3Layout.createSequentialGroup().addContainerGap()
						.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 69, GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(ComponentPlacement.RELATED)
						.addComponent(lblNewLabel, GroupLayout.PREFERRED_SIZE, 22, GroupLayout.PREFERRED_SIZE)
						.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		jPanel3.setLayout(jPanel3Layout);

		panel.setBorder(null);
		panel.setBackground(new Color(0, 128, 192));

		JPanel panel_1 = new JPanel();
		panel_1.setBackground(new Color(0, 128, 192));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		layout.setHorizontalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
				.addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
				.addPreferredGap(ComponentPlacement.RELATED)
				.addGroup(layout.createParallelGroup(Alignment.TRAILING)
						.addComponent(jPanel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(layout.createSequentialGroup()
								.addGroup(layout.createParallelGroup(Alignment.TRAILING)
										.addComponent(panel_1, GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
										.addComponent(panel, GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE))
								.addContainerGap()))));
		layout.setVerticalGroup(layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, 113, GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(ComponentPlacement.RELATED)
						.addComponent(panel_1, GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
						.addPreferredGap(ComponentPlacement.RELATED)
						.addComponent(panel, GroupLayout.PREFERRED_SIZE, 244, GroupLayout.PREFERRED_SIZE))
				.addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE));
		panel_1.setLayout(new GridLayout(3, 1, 0, 0));

		btnNewButton_1 = new JButton("Attack");
		panel_1.add(btnNewButton_1);
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				controller.model.pcs.firePropertyChange("doneChoosing", 0, 1);
				new Attack(controller.model).setVisible(true);
			}
		});
		btnNewButton_1.setEnabled(false);
		btnNewButton_2 = new JButton("Journal");
		panel_1.add(btnNewButton_2);
		btnNewButton_2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				controller.model.pcs.firePropertyChange("doneChoosing", 0, 2);
				new UpperGrid(controller.model).setVisible(true);
			}
		});
		btnNewButton_2.setEnabled(false);
		btnNewButton_3 = new JButton("Surrender");
		panel_1.add(btnNewButton_3);
		btnNewButton_3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				controller.model.pcs.firePropertyChange("doneChoosing", 0, 3);
				int result = JOptionPane.showConfirmDialog(null, "Surrender?", "Surrender message",
						JOptionPane.YES_NO_OPTION);
				if (result == JOptionPane.YES_OPTION)
					controller.model.pcs.firePropertyChange("doneSurrendering", 0, 1);
				else
					controller.model.pcs.firePropertyChange("doneSurrendering", 0, -1);
			}
		});
		btnNewButton_3.setEnabled(false);
		panel.setLayout(null);

		lblNewLabel_1.setFont(new Font("Tahoma", Font.BOLD, 18));
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_1.setBounds(10, 14, 196, 50);
		panel.add(lblNewLabel_1);
		String[] arr = new String[LOWER.values().length - 2];
		LOWER[] arr2 = LOWER.values();
		for (int i = 0; i < arr.length; i++) {
			arr[i] = arr2[i].toString();
		}
		lblNewLabel_2.setFont(new Font("Tahoma", Font.PLAIN, 8));

		lblNewLabel_2.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_2.setBounds(10, 121, 395, 27);
		panel.add(lblNewLabel_2);

		lblNewLabel_3 = new JLabel("Orientation");
		lblNewLabel_3.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel_3.setFont(new Font("Tahoma", Font.BOLD, 18));
		lblNewLabel_3.setBounds(10, 61, 196, 50);
		panel.add(lblNewLabel_3);

		btnNewButton.setFont(new Font("Tahoma", Font.BOLD, 18));
		btnNewButton.setBounds(216, 70, 189, 41);
		panel.add(btnNewButton);
		LOWER[] arra = LOWER.values();
		btnNewButton_4 = new JButton(arra[0].toString());
		btnNewButton_4.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				ArrayList<String> choices = new ArrayList<String>();
				for (LOWER item : controller.ships.keySet())
					choices.add(item.toString());
				btnNewButton_4.setText(choices.get((choices.indexOf(btnNewButton_4.getText()) + 1) % choices.size()));
			}
		});
		btnNewButton_4.setFont(new Font("Tahoma", Font.BOLD, 18));
		btnNewButton_4.setBounds(216, 19, 189, 41);
		panel.add(btnNewButton_4);

		getContentPane().setLayout(layout);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	private JTextArea textArea_1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private JLabel lblNewLabel_3;
	private JButton btnNewButton_1;
	private JButton btnNewButton_2;
	private JButton btnNewButton_3;
	private JButton btnNewButton_4;
}
